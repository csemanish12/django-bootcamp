JSON:
JSON is a text-based data format following JavaScript object syntax,

Note: Converting a string to a native object is called deserialization, while converting a native object to a string so
it can be transmitted across the network is called serialization.

JSON is purely a data format â€” it contains only properties, no methods.
JSON requires double quotes to be used around strings and property names. Single quotes are not valid.
Even a single misplaced comma or colon can cause a JSON file to go wrong, and not work. You should be careful to validate any data you are attempting to use (although computer-generated JSON is less likely to include errors, as long as the generator program is working correctly). You can validate JSON using an application like JSONLint.
JSON can actually take the form of any data type that is valid for inclusion inside JSON, not just arrays or objects. So for example, a single string or number would be a valid JSON object.
Unlike in JavaScript code in which object properties may be unquoted, in JSON only quoted strings may be used as properties.

# obtaining json
-we use api called XMLHttpRequest(XHR).
-this allows us to make network requests to retrieve resources from
 server

 parse(): Accepts a JSON string as a parameter, and returns the corresponding JavaScript object.
stringify(): Accepts an object as a parameter, and returns the equivalent JSON string form.